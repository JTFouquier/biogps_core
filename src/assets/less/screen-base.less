/* Here we define the standard styles that are applied all screens  */

/* ================= GRID SETUP ==================
 * This mixin sets up the foundation for your grid
 * it is nescessary that this is called outside any
 * element because it provides variables that must
 * be in the global scope. Otherwise the grid system
 * won't work as excpected.

 *  .grid_setup - MIXIN
 *  The core function of the grid module, that builds up
 *  the basic structure and provides you with any number of
 *  columns with custom gap size, min-width and max-width
 *
 *  it's also the setup function for all other grid
 *  modules. So you can define most presets in one
 *  mixin call.
 *
 *  @width   - defines the width of the grid (any css unit)
 *  @columns - specifies the number of columns in the grid (plane number)
 *  @gap     - The gap between elements in the grid (any css unit)
 *  @align   - align the grid on left / center / right side of parent
 *  @min     - minimal width of the grid (any css unit)
 *  @max     - maximal width of the grid (any css unit)
 */

/* setup for all browsers that don't understand media queries */
.grid_setup(984px, 12, 30px, center, 400px, 984px);

/* The body element can be used to apply the vertical rhythm
 * to your document or other type and color sheme related setups */
body {
    color: @color_text;
    line-height: 1.5em;
    width: 100%;
}

/**
 * TEXT SELECTION HIGHLIGHT COLORS
 * These selection declarations have to be separate.
 * No text-shadow: twitter.com/miketaylr/status/12228805301
 * Also: hot pink. */
::-moz-selection{ background:@color_highlight; color:#fff; text-shadow: none; }
::selection { background:@color_highlight; color:#fff; text-shadow: none; }


/*
 * HEADERS
 */
h1, h2, h3, h4, h5, h6, b, strong { color: @color_darkgreen; }

h1, h2, h3, h4, h5, h6 {
    text-shadow: 0 2px 0 rgba(255,255,255,0.5);

    a { color: @color_darkgreen; }
}

h1 { margin: 0.7em 0 0.5em 0; }
h2, h3, h4 { margin: 1em 0 0.3em 0; }

// When H! is the first child in a div, give it zero top margin
h1:first-child,
h2:first-child,
h3:first-child,
h4:first-child,
h5:first-child,
h6:first-child {
    margin-top: 0;
}


/*
 *  ANCHOR TAGS
 */
a {
    color: @color_links;
    .css3_transition(text-shadow, 0.2s, ease-out, 0s);

    &:link {
        color: @color_links;
        text-decoration: none;
    }

    &:visited {
        color: @color_link_visited;
        text-decoration: none;
    }

    &:hover,
    &:focus {
        color: @color_link_hover;
        text-decoration: underline;
        text-shadow: 1px 1px 3px #888;
    }

    &:active {
        color: #000;
        text-shadow: 1px 1px 3px @color_links;
    }

    &.active {
        color: @color_link_hover;
        font-weight: bold;
    }
}

/* Special class to be used as a mixin in other style definitions.
 * Prevents the :visited color from showing.
 * Used in the header, footer and breadcrumbs.
 */
.hide-visited {
    a {
        &:visited {
            color: @color_links;
        }

        &:hover,
        &:focus {
            color: @color_link_hover;
        }

        &:active {
            color: #000;
        }

        &.active {
            color: @color_link_hover;
        }
    }
}



nav {
    a:link,
    a:visited {
        text-shadow: 1px 1px 0px rgba(255,255,255,0.7);
    }

    a:hover,
    a:focus {
        text-shadow: 1px 1px 3px #888;
    }

    a:active {
        color: #000;
        text-shadow: 1px 1px 3px @color_links;
    }
}


cite {
    color: #0E774A;
    font-style: normal;
}


.nav-sprite a:link,
.nav-sprite a:visited {
    background-image: url('/assets/img2/sprite_sitewide.png');
    background-repeat: no-repeat;
    .inline_block;
    text-indent: -5000px;
}




/*
 * FORM ELEMENTS
 */

.blurred {
    color: @color_medium_border;
}

input:focus,
textarea:focus {
    color: #000;
}




/*
 * DEFINITION LISTS
 * Used to display detailed attributes of objects.
 */
dl {
    margin: 0;
}

dt {
    .inline_block;
    font-weight: bold;
    width: 8em;
}

dd {
    .inline_block;
}





/*
 * BREADCRUMB NAVIGATION
 */
.breadcrumbs {
   margin: 1em 0;
   .hide-visited;
}






/*
 * JAVASCRIPT LOADING
 * Use the class 'requires-js' on any element that won't work until the full
 * JS stack has been loaded by the browser.
 */
.no-js .requires-js,
.js-loading .requires-js {
    display: none;
    visibility: hidden;
}





/*
 * TOOLTIPS
 */
.tooltip {
/*    display:none;*/
    background: #333;
    border: 2px solid #fff;
    color: #fff;
    font-size: 100%;
    padding: 15px;

    .css3_box_shadow(0, 0, 15px, #000);
    .css3_border_radius(3px);
    .css3_linear_gradient(rgba(40,40,40,0.7), rgba(20,20,20,0.9));
}

/* a .label element inside tooltip */
.tooltip .label {
    color:yellow;
    width:35px;
}

.tooltip a {
    color:#ad4;
    font-size:11px;
    font-weight:bold;
}




/*
 * MODAL DIALOG BOXES
 */
.popup {
    background: #333;
    border: 2px solid #fff;
    color: #fff;
    display: none;
    width: 350px;
    padding: 0 15px;
    text-align: left;

    .css3_box_shadow(0, 0, 30px, #000);
    .css3_border_radius(3px);
    .css3_linear_gradient(rgba(40,40,40,0.7), rgba(20,20,20,0.9));

    h2 {
        color: @color_highlight;
        text-shadow: 0 1px 1px #000;
    }
}





/*
 * ROUND BOX (from V1)
 */
.roundBox,
.roundBoxBlue {
    background: #fff url(/assets/img/roundbox_gradient.gif) repeat-x;
    border: 1px solid #C0C4C6;
    color: @color_text;
    margin: 0 3px 15px 0; /* 3px on right to ensure box_shadow is visible */
    padding: 10px;

    .css3_border_radius(6px);
    .css3_box_shadow(1px, 1px, 3px, #777);
    .util_clearfix;
}

.roundBoxBlue {
    background: #F0F5FA url(/assets/img/roundbox_blue_gradient.gif) repeat-x;
    border-color: #A5A593;
}




/*
 * OTHER FORMAT LINKS
 */
#alternate-formats {
    color: #BBB;
    font-size: 85%;
    h4, a {
        color: #BBB;
    }
}



#container {
    .grid();
}










/* convenient skip link functionality included in the nav module */
#skip-link {
    .nav_skip_link();
}


/* This is the wrapper element we declare as grid */
#page {
    /* This mixin makes this element a grid */
    .grid();
    /* Here we define a linear gradient background for the whole
     * grid element. You can see the effect at the second sidebar */
    .css3_linear_gradient(#F1F1F1, #CCC );
    /* This adds rounded corners to the page element */
    .css3_border_radius();
    /* add a smooth box shadow */
    .css3_box_shadow(2px, 2px, 10px, #999);
    /* add contrast to the page border */
    border: 1px solid #036;
}

/* override grid settings for browsers that can react to  small screen sizes */
@media only screen and (min-width: 0px) {
    #page {
        /* change min-width to 0px to allow smaller sizes */
        .grid(@grid_width, @grid_columns, @grid_gap, @grid_align, 0px, 960px);
    }
}



/* set the background color variable for nav, article and sidebar 1 */
@bgColor: #A3CED7;

nav#main-menu {
    /* the navigation spans all 8 columns */
    .grid_span(8);
    /* compose a horizontal navigation */
    .nav_horizontal();
    /* these are the colors for the states - normal, hover, active */
    .nav_background(#E3E3E3, @bgColor, @bgColor);
    .nav_text_color(black, black, black);

    /* like css rounded corners: top-left, top-right, bottom-right, bottom-left */
    .nav_rounded(0px 5px 0px 0px);
    /* padding around the text */
    .nav_padding(0.5em 1em);
    /* define gaps left, right of each nav item */
    .nav_gap(0, 0.3em);
}

/* this element is a wrapper for the equal columns used
 * in this example. If you don't need equal columns, than
 * you don't have to wrap them
 */
#content {
    /* define this element as column wrapper */
    .grid_col_wrap();
    /* define it specifically as equal column wrapper */
    .grid_col_equal_wrap();
}

header,
section {
    .util_clearfix;
}

article {
    .grid_span(9); /* the article is 9 columns wide */
    .grid_left(); /* it floats left */
    .grid_gap_right;
    /* make this column an equal height column */
    .grid_col_equal();
}


.shift-for-sidebar-left {
    .grid_span(10);
    .grid_shift_right(2);
    .grid_gap_left;
}


#sidebar-left {
    .grid_span(2); /* the sidebar is 2 columns wide */
    .grid_left(); /* it floats left (but would be beside the article on the right) */
    .grid_shift_left(10); /* if we didn't shift it to the left 10 columns */
    .grid_gap_right; /* add gaps on right side */
    .grid_col_equal(); /* make this column an equal height column */

    /* add gap with padding so we can use borders */
    .grid_gap_none;
    > .in {
        padding-right: @grid_gap / 2;
        padding-left: 0;
    }
}

#sidebar-right {
    .grid_span(3); /* the sidebar is 3 columns wide */
    .grid_right(); /* last column always floats right */
    .grid_gap_left; /* add gaps on left side */
    .grid_col_equal(); /* make this column an equal height column */
}

.half-box-container {
	.grid();
}

.half-box {
	.grid_span(6.0);
	.grid_left();
	&:first-child {
		.grid_gap_right;
	}
	&:last-child {
		.grid_gap_left;
	}

}

/*
 * Restyle the colors of links inside header elements.
 * This has to be done at the bottom of the stylesheet to make sure we override
 * the standard color definitions for links.
 */
h1, h2, h3, h4, h5, h6 {
    a:link, a:visited { color: @color_darkgreen; }
}

