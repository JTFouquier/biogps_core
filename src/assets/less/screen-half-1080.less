/* All styles that get applied on screen sizes smaller than 1000 px */
/* This includes the iPad. */

/* Now we come to the real shit. Responsive Webdesign!
 * Here define what should happen when the page is viewed
 * on a small screen or browser window. All these rules
 * apply as soon as the window size is smaller than 1000px
 * but bigger than 830px (because we have two other size
 * queries for smaller devices)
 * The primary target for this layout is half the width of
 * a 1080p display, such as when a Win7 user docks their
 * browser to one side of their monitor.
 */

@media only screen and (max-width: 1000px) and (min-width: 830px) {

	/* header-footer.less */
	#contain-header,
	header,
	#contain-footer,
	footer,
	#container {
	    .grid_span(10);
    }

    #header-center {
        .grid_span(7);
    }
    #header-search {
        .grid_shift_left(1);
    }

	#page-alt-nav {
		.grid_span(2);
	}

    #footer-links {
        .grid_span(7);
    }
    #footer-logo {
        .grid_span(3);
    }

	/* screen-base.less */
	article {
		.grid_span(7);/* make the article span the full 12 columns */
		.grid_unshift();
		.grid_col_equal_remove(); /* remove the equal columns */
	}
	.shift-for-sidebar-left {
		.grid_span(8);
	}
	#sidebar-left {
		.grid_shift_left(8);
		.grid_col_equal_remove();
	}
	#sidebar-right {
		.grid_col_equal_remove();
	}

	/* browsing.less */
	.browse-category-highlights {
        .grid_span(3.7);
    }

	#browse-footer-nav div {
		.grid_span(2);
	}

	/* objects.less */
	.object-summary-details {
        .grid_span(4);
    }

    /* tags.less */
    #tag-list {
        -moz-column-count: 4;
        -webkit-column-count: 4;
    }

    /* flatpages.less */
    .flatpage {
    	article {
    		.grid_span(10);
    	}
    }
}
